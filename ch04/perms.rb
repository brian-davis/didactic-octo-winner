module Perms
  class << self
    # For a total number of columns, find all unique column arrangements.
    # Builds a list of lists containing all possible unique arrangements of
    # individual column numbers including negative values for route direction
    # Input:
    # -total number of columns
    # Returns:
    # -list of lists of unique column orders including negative values for
    # route cipher encryption direction

    # build list of lists of column number combinations
    # return cartesian product of input iterables
    # Take number of columns integer & generate pos & neg permutations.
    def perms(num_cols)
      results = []
      columns = (1..(num_cols)).to_a

      basis = [-1,1]
      product = py_product_repeat(basis, columns.length)

      for perm in columns.permutation
        for signs in product
          results.push(perm.zip(signs).map { |i, sign| i * sign })
        end
      end
      return results
    end

    # As in Python: product(range(2), repeat=3) â†’ 000 001 010 011 100 101 110 111
    # https://docs.python.org/3/library/itertools.html#itertools.product
    # Ruby :
    # a = (0...2).to_a # range(2) # just an example, need an array
    # repeater = [[0,1],[0,1],[0,1]] # a, 3 times.
    # >> [0,1].product([0,1],[0,1]) # must call .product as a method on an element object from repeater
    # => [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]
    #

    def py_product_repeat(basis, repeat_n)
      repeater = repeat_n.times.with_object([]) { |_, a| a.push(basis) }
      repeater.shift.product(*repeater)
    end
  end
end

# p Perms.perms(4)

# [[-1, -2, -3, -4], [-1, -2, -3, 4], [-1, -2, 3, -4], [-1, -2, 3, 4], [-1, 2, -3, -4], [-1, 2, -3, 4], [-1, 2, 3, -4], [-1, 2, 3, 4], [1, -2, -3, -4], [1, -2, -3, 4], [1, -2, 3, -4], [1, -2, 3, 4], [1, 2, -3, -4], [1, 2, -3, 4], [1, 2, 3, -4], [1, 2, 3, 4], [-1, -2, -4, -3], [-1, -2, -4, 3], [-1, -2, 4, -3], [-1, -2, 4, 3], [-1, 2, -4, -3], [-1, 2, -4, 3], [-1, 2, 4, -3], [-1, 2, 4, 3], [1, -2, -4, -3], [1, -2, -4, 3], [1, -2, 4, -3], [1, -2, 4, 3], [1, 2, -4, -3], [1, 2, -4, 3], [1, 2, 4, -3], [1, 2, 4, 3], [-1, -3, -2, -4], [-1, -3, -2, 4], [-1, -3, 2, -4], [-1, -3, 2, 4], [-1, 3, -2, -4], [-1, 3, -2, 4], [-1, 3, 2, -4], [-1, 3, 2, 4], [1, -3, -2, -4], [1, -3, -2, 4], [1, -3, 2, -4], [1, -3, 2, 4], [1, 3, -2, -4], [1, 3, -2, 4], [1, 3, 2, -4], [1, 3, 2, 4], [-1, -3, -4, -2], [-1, -3, -4, 2], [-1, -3, 4, -2], [-1, -3, 4, 2], [-1, 3, -4, -2], [-1, 3, -4, 2], [-1, 3, 4, -2], [-1, 3, 4, 2], [1, -3, -4, -2], [1, -3, -4, 2], [1, -3, 4, -2], [1, -3, 4, 2], [1, 3, -4, -2], [1, 3, -4, 2], [1, 3, 4, -2], [1, 3, 4, 2], [-1, -4, -2, -3], [-1, -4, -2, 3], [-1, -4, 2, -3], [-1, -4, 2, 3], [-1, 4, -2, -3], [-1, 4, -2, 3], [-1, 4, 2, -3], [-1, 4, 2, 3], [1, -4, -2, -3], [1, -4, -2, 3], [1, -4, 2, -3], [1, -4, 2, 3], [1, 4, -2, -3], [1, 4, -2, 3], [1, 4, 2, -3], [1, 4, 2, 3], [-1, -4, -3, -2], [-1, -4, -3, 2], [-1, -4, 3, -2], [-1, -4, 3, 2], [-1, 4, -3, -2], [-1, 4, -3, 2], [-1, 4, 3, -2], [-1, 4, 3, 2], [1, -4, -3, -2], [1, -4, -3, 2], [1, -4, 3, -2], [1, -4, 3, 2], [1, 4, -3, -2], [1, 4, -3, 2], [1, 4, 3, -2], [1, 4, 3, 2], [-2, -1, -3, -4], [-2, -1, -3, 4], [-2, -1, 3, -4], [-2, -1, 3, 4], [-2, 1, -3, -4], [-2, 1, -3, 4], [-2, 1, 3, -4], [-2, 1, 3, 4], [2, -1, -3, -4], [2, -1, -3, 4], [2, -1, 3, -4], [2, -1, 3, 4], [2, 1, -3, -4], [2, 1, -3, 4], [2, 1, 3, -4], [2, 1, 3, 4], [-2, -1, -4, -3], [-2, -1, -4, 3], [-2, -1, 4, -3], [-2, -1, 4, 3], [-2, 1, -4, -3], [-2, 1, -4, 3], [-2, 1, 4, -3], [-2, 1, 4, 3], [2, -1, -4, -3], [2, -1, -4, 3], [2, -1, 4, -3], [2, -1, 4, 3], [2, 1, -4, -3], [2, 1, -4, 3], [2, 1, 4, -3], [2, 1, 4, 3], [-2, -3, -1, -4], [-2, -3, -1, 4], [-2, -3, 1, -4], [-2, -3, 1, 4], [-2, 3, -1, -4], [-2, 3, -1, 4], [-2, 3, 1, -4], [-2, 3, 1, 4], [2, -3, -1, -4], [2, -3, -1, 4], [2, -3, 1, -4], [2, -3, 1, 4], [2, 3, -1, -4], [2, 3, -1, 4], [2, 3, 1, -4], [2, 3, 1, 4], [-2, -3, -4, -1], [-2, -3, -4, 1], [-2, -3, 4, -1], [-2, -3, 4, 1], [-2, 3, -4, -1], [-2, 3, -4, 1], [-2, 3, 4, -1], [-2, 3, 4, 1], [2, -3, -4, -1], [2, -3, -4, 1], [2, -3, 4, -1], [2, -3, 4, 1], [2, 3, -4, -1], [2, 3, -4, 1], [2, 3, 4, -1], [2, 3, 4, 1], [-2, -4, -1, -3], [-2, -4, -1, 3], [-2, -4, 1, -3], [-2, -4, 1, 3], [-2, 4, -1, -3], [-2, 4, -1, 3], [-2, 4, 1, -3], [-2, 4, 1, 3], [2, -4, -1, -3], [2, -4, -1, 3], [2, -4, 1, -3], [2, -4, 1, 3], [2, 4, -1, -3], [2, 4, -1, 3], [2, 4, 1, -3], [2, 4, 1, 3], [-2, -4, -3, -1], [-2, -4, -3, 1], [-2, -4, 3, -1], [-2, -4, 3, 1], [-2, 4, -3, -1], [-2, 4, -3, 1], [-2, 4, 3, -1], [-2, 4, 3, 1], [2, -4, -3, -1], [2, -4, -3, 1], [2, -4, 3, -1], [2, -4, 3, 1], [2, 4, -3, -1], [2, 4, -3, 1], [2, 4, 3, -1], [2, 4, 3, 1], [-3, -1, -2, -4], [-3, -1, -2, 4], [-3, -1, 2, -4], [-3, -1, 2, 4], [-3, 1, -2, -4], [-3, 1, -2, 4], [-3, 1, 2, -4], [-3, 1, 2, 4], [3, -1, -2, -4], [3, -1, -2, 4], [3, -1, 2, -4], [3, -1, 2, 4], [3, 1, -2, -4], [3, 1, -2, 4], [3, 1, 2, -4], [3, 1, 2, 4], [-3, -1, -4, -2], [-3, -1, -4, 2], [-3, -1, 4, -2], [-3, -1, 4, 2], [-3, 1, -4, -2], [-3, 1, -4, 2], [-3, 1, 4, -2], [-3, 1, 4, 2], [3, -1, -4, -2], [3, -1, -4, 2], [3, -1, 4, -2], [3, -1, 4, 2], [3, 1, -4, -2], [3, 1, -4, 2], [3, 1, 4, -2], [3, 1, 4, 2], [-3, -2, -1, -4], [-3, -2, -1, 4], [-3, -2, 1, -4], [-3, -2, 1, 4], [-3, 2, -1, -4], [-3, 2, -1, 4], [-3, 2, 1, -4], [-3, 2, 1, 4], [3, -2, -1, -4], [3, -2, -1, 4], [3, -2, 1, -4], [3, -2, 1, 4], [3, 2, -1, -4], [3, 2, -1, 4], [3, 2, 1, -4], [3, 2, 1, 4], [-3, -2, -4, -1], [-3, -2, -4, 1], [-3, -2, 4, -1], [-3, -2, 4, 1], [-3, 2, -4, -1], [-3, 2, -4, 1], [-3, 2, 4, -1], [-3, 2, 4, 1], [3, -2, -4, -1], [3, -2, -4, 1], [3, -2, 4, -1], [3, -2, 4, 1], [3, 2, -4, -1], [3, 2, -4, 1], [3, 2, 4, -1], [3, 2, 4, 1], [-3, -4, -1, -2], [-3, -4, -1, 2], [-3, -4, 1, -2], [-3, -4, 1, 2], [-3, 4, -1, -2], [-3, 4, -1, 2], [-3, 4, 1, -2], [-3, 4, 1, 2], [3, -4, -1, -2], [3, -4, -1, 2], [3, -4, 1, -2], [3, -4, 1, 2], [3, 4, -1, -2], [3, 4, -1, 2], [3, 4, 1, -2], [3, 4, 1, 2], [-3, -4, -2, -1], [-3, -4, -2, 1], [-3, -4, 2, -1], [-3, -4, 2, 1], [-3, 4, -2, -1], [-3, 4, -2, 1], [-3, 4, 2, -1], [-3, 4, 2, 1], [3, -4, -2, -1], [3, -4, -2, 1], [3, -4, 2, -1], [3, -4, 2, 1], [3, 4, -2, -1], [3, 4, -2, 1], [3, 4, 2, -1], [3, 4, 2, 1], [-4, -1, -2, -3], [-4, -1, -2, 3], [-4, -1, 2, -3], [-4, -1, 2, 3], [-4, 1, -2, -3], [-4, 1, -2, 3], [-4, 1, 2, -3], [-4, 1, 2, 3], [4, -1, -2, -3], [4, -1, -2, 3], [4, -1, 2, -3], [4, -1, 2, 3], [4, 1, -2, -3], [4, 1, -2, 3], [4, 1, 2, -3], [4, 1, 2, 3], [-4, -1, -3, -2], [-4, -1, -3, 2], [-4, -1, 3, -2], [-4, -1, 3, 2], [-4, 1, -3, -2], [-4, 1, -3, 2], [-4, 1, 3, -2], [-4, 1, 3, 2], [4, -1, -3, -2], [4, -1, -3, 2], [4, -1, 3, -2], [4, -1, 3, 2], [4, 1, -3, -2], [4, 1, -3, 2], [4, 1, 3, -2], [4, 1, 3, 2], [-4, -2, -1, -3], [-4, -2, -1, 3], [-4, -2, 1, -3], [-4, -2, 1, 3], [-4, 2, -1, -3], [-4, 2, -1, 3], [-4, 2, 1, -3], [-4, 2, 1, 3], [4, -2, -1, -3], [4, -2, -1, 3], [4, -2, 1, -3], [4, -2, 1, 3], [4, 2, -1, -3], [4, 2, -1, 3], [4, 2, 1, -3], [4, 2, 1, 3], [-4, -2, -3, -1], [-4, -2, -3, 1], [-4, -2, 3, -1], [-4, -2, 3, 1], [-4, 2, -3, -1], [-4, 2, -3, 1], [-4, 2, 3, -1], [-4, 2, 3, 1], [4, -2, -3, -1], [4, -2, -3, 1], [4, -2, 3, -1], [4, -2, 3, 1], [4, 2, -3, -1], [4, 2, -3, 1], [4, 2, 3, -1], [4, 2, 3, 1], [-4, -3, -1, -2], [-4, -3, -1, 2], [-4, -3, 1, -2], [-4, -3, 1, 2], [-4, 3, -1, -2], [-4, 3, -1, 2], [-4, 3, 1, -2], [-4, 3, 1, 2], [4, -3, -1, -2], [4, -3, -1, 2], [4, -3, 1, -2], [4, -3, 1, 2], [4, 3, -1, -2], [4, 3, -1, 2], [4, 3, 1, -2], [4, 3, 1, 2], [-4, -3, -2, -1], [-4, -3, -2, 1], [-4, -3, 2, -1], [-4, -3, 2, 1], [-4, 3, -2, -1], [-4, 3, -2, 1], [-4, 3, 2, -1], [-4, 3, 2, 1], [4, -3, -2, -1], [4, -3, -2, 1], [4, -3, 2, -1], [4, -3, 2, 1], [4, 3, -2, -1], [4, 3, -2, 1], [4, 3, 2, -1], [4, 3, 2, 1]]